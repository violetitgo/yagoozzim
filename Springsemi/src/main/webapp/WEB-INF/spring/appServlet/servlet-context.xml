<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 사용자의 요청과 관련된 bean을 등록하는 설정 파일 -->
	<!-- controller, view, intercepter, 정적 데이터 요청(resources 설정) -->




	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- <annotation-driven /> 이거 없으면 무조건 404야 -->


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- /resources 로 요청이 들어왔을 때, webapp 아래의 /resources/ 폴더로 매핑 -->


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- setViewName() 값 앞 뒤에 붙일 경로 지정 -->


	<context:component-scan
		base-package="com.semi.yagoozzim" />
	<!-- 빈으로 등록하기 위해서 스프링이 객체를 탐색할 영역 -->

	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:bean class="common.interceptor.AuthInterceptor" />
		</interceptor>
	</interceptors>




	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
		<!-- dataSource를 끌고와서 서브릴섴ㄴ텍스트에 있는 transcationManeger에게 참조해서 넣어주기 -->
	</beans:bean>

	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<!-- propagation="REQUIRED" : 이미 실행되고 있는 트랜잭션이 있다면, 해당 트랜잭션에 포함. 만약에 없다면 
			새로운 트랜잭션을 생성 -->
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="Exception" />
			<!-- insert로 시작하는 모든 메소드에서 익셉션이 발생했을대 -->
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="requiredTx"
			expression="execution(* com.semi.yagoozzim..*.*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="requiredTx" />
	</aop:config>



	<tx:annotation-driven
		transaction-manager="transactionManager" />


</beans:beans>
